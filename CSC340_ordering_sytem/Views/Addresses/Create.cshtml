@model CSC340_ordering_sytem.ViewModels.AddressCreateViewModel

@{
    ViewBag.Title = "Add Address";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
    </div>

    <div class="row">
        <div class="col-xs-6">
            <div class="margin-top-15">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
        <div class="col-xs-6 text-right">
            <input type="submit" value="Add" class="btn btn-gold" />
        </div>
    </div>
}